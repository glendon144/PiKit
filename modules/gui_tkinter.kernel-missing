
import tkinter as tk
from tkinter import simpledialog, messagebox, filedialog, scrolledtext
import os
import json
from modules.kernel import Kernel
from modules.exporter import FacebookExporter

class DemoKitGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("DemoKit GUI")
        self.kernel = Kernel()
        self.create_widgets()

    def create_widgets(self):
        menu_bar = tk.Menu(self.root)
        file_menu = tk.Menu(menu_bar, tearoff=0)
        file_menu.add_command(label="Load", command=self.load_file)
        file_menu.add_command(label="Save", command=self.save_file)
        file_menu.add_command(label="Export to Facebook", command=self.export_facebook)
        file_menu.add_separator()
        file_menu.add_command(label="Exit", command=self.root.quit)
        menu_bar.add_cascade(label="File", menu=file_menu)

        command_menu = tk.Menu(menu_bar, tearoff=0)
        command_menu.add_command(label="Run Command", command=self.run_command)
        menu_bar.add_cascade(label="Commands", menu=command_menu)
        self.root.config(menu=menu_bar)

        self.text_editor = scrolledtext.ScrolledText(self.root, wrap=tk.WORD, width=80, height=20)
        self.text_editor.pack(padx=10, pady=10, fill=tk.BOTH, expand=True)
        self.text_editor.bind("<Button-3>", self._popup_editor_menu)

        self.output_display = scrolledtext.ScrolledText(self.root, wrap=tk.WORD, width=80, height=10, bg="#f0f0f0")
        self.output_display.pack(padx=10, pady=(0, 10), fill=tk.BOTH, expand=True)
        self.output_display.config(state=tk.DISABLED)

        self.editor_menu = tk.Menu(self.root, tearoff=0)
        self.editor_menu.add_command(label="Run Command", command=self.run_command)
        self.editor_menu.add_command(label="Export to Facebook", command=self.export_facebook)

    def _popup_editor_menu(self, event):
        try:
            self.editor_menu.tk_popup(event.x_root, event.y_root)
        finally:
            self.editor_menu.grab_release()

    def on_link_click(self, event):
        index = self.text_editor.index("@%s,%s" % (event.x, event.y))
        tags = self.text_editor.tag_names(index)
        if "link" in tags:
            start = self.text_editor.index(f"{index} wordstart")
            end = self.text_editor.index(f"{index} wordend")
            link_text = self.text_editor.get(start, end)
            self.process_link(link_text)

    def process_link(self, link_text):
        self.append_output(f"Processing link: {link_text}")

    def load_file(self):
        file_path = filedialog.askopenfilename(filetypes=[("Text Files", "*.txt"), ("All Files", "*.*")])
        if file_path:
            with open(file_path, "r") as f:
                content = f.read()
                self.text_editor.delete("1.0", tk.END)
                self.text_editor.insert(tk.END, content)

    def save_file(self):
        file_path = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text Files", "*.txt"), ("All Files", "*.*")])
        if file_path:
            content = self.text_editor.get("1.0", tk.END)
            with open(file_path, "w") as f:
                f.write(content)

    def run_command(self):
        command_text = self.text_editor.get("1.0", tk.END).strip()
        if command_text:
            output = self.kernel.run(command_text)
            self.append_output(output)

    def export_facebook(self):
        content = self.text_editor.get("1.0", tk.END).strip()
        if content:
            exporter = FacebookExporter()
            result = exporter.export(content)
            self.append_output(f"Facebook export result: {result}")

    def append_output(self, text):
        self.output_display.config(state=tk.NORMAL)
        self.output_display.insert(tk.END, text + "\n")
        self.output_display.see(tk.END)
        self.output_display.config(state=tk.DISABLED)

if __name__ == "__main__":
    root = tk.Tk()
    app = DemoKitGUI(root)
    root.mainloop()
